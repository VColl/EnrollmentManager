<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAIyIk3SMiJNYAAAAAAAAAACMiJM8jIiTIIyElvSIiJeIAAAAAAAAAACMiJbojIiX2IyIkwSMi
        JMEjIiTBIyIkwSMiJMEjIiTBIyIkwSMiJMEjIiTBIyIkwSMiJMEjIiTBIyIkwSMiJMEjIiTBIyIkwSMi
        JMEjIiTBIyIkwSMiJMEjIiX2IyIk1gAAAAAAAAAAIiIl4iMiJLsjISWIJCMm/yAgJTcAAAAAIyEleiMi
        JNYjIiTWIyIk1iMiJNYjIiTWIyIk1iMiJNYjIiTWIyIk1iMiJNYjIiTWIyIk1iMiJNYjIiTWIyIk1iMi
        JNYjIiTWIyIk1iMiJNYjIiTWIyIk1iMiJNYjISWBAAAAACAgJTckIyb/IiIkhB0dJCMjIib4IyIk1h8f
        HxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfHx8YIyIl1SMiJfcfHx8gAAAAACIi
        JGgjIiX+IyIl7CMhJYghISRcIiIlWCIiJVgiIiVYIiIlWCIiJVgiIiVYIiIlWCIiJVgiIiVYIiIlWCIi
        JVgiIiVYIiIlWCIiJVgiIiVYIiIlWCIiJVgiIiVYIiIlWCIiJVghISRcIyEliCMiJewjIiX+IyEmZAAA
        AAAAAAAAAAAAACIiJVIjIiXhJCMm/yQjJv8kIyb/JCMm/yQjJv8kIyb/JCMm/yQjJv8kIyb/JCMm/yQj
        Jv8kIyb/JCMm/yQjJv8kIyb/JCMm/yQjJv8kIyb/JCMm/yQjJv8kIyb/JCMm/yQjJv8kIyb/IyIl4CIi
        JVEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMfHyQ4IiIlWCEhJFshISRbISEkWyEhJFshISRbISEkWyEh
        JFshISRbISEkWyEhJFshISRbISEkWyEhJFshISRbISEkWyEhJFshISRbISEkWyEhJFshISRbIiIlWB8f
        JDgAAAADAAAAAAAAAAAAAAAA/8AD//+AA///gAH//4/x//+P8f//z/P//8/z/+AAAAeAAAABh///4R//
        //gf///4MAAADDAAAAwwAAAMMwA/zDMAP8wzAD/MMwADzDPAA8wzwABMM8AATDPAgMwzwABMM+EATDPz
        /8wwAAAMEAAACA////CAAAABwAAAA+AAAAc=
</value>
  </data>
</root>