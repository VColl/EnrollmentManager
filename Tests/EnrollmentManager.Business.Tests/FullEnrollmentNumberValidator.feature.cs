// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EnrollmentManager.Business.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("FullEnrollmentNumberValidator", Description="\tValidating enrollment numbers, checking their check-digits", SourceFile="FullEnrollmentNumberValidator.feature", SourceLine=0)]
    public partial class FullEnrollmentNumberValidatorFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "FullEnrollmentNumberValidator.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "FullEnrollmentNumberValidator", "\tValidating enrollment numbers, checking their check-digits", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void WellFormatedEnrollmentNumbers(string enrollmentNumber, string decimalCheckDigit, string checkDigit, string fullEnrollmentNumber, string result, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Well formated enrollment numbers", null, exampleTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 testRunner.Given(string.Format("the CheckDigitCalculator returns {0} for the input {1}", decimalCheckDigit, enrollmentNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.And(string.Format("the HexadecimalConverter returns {0} for the input {1}", checkDigit, decimalCheckDigit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
 testRunner.When(string.Format("I input {0} into the FullEnrollmentNumberValidator", fullEnrollmentNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.Then(string.Format("the result should be {0}", result), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 0000", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_0000()
        {
#line 4
this.WellFormatedEnrollmentNumbers("0000", "0", "0", "0000-0", "true", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 001", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_001()
        {
#line 4
this.WellFormatedEnrollmentNumbers("001", "2", "2", "001-2", "true", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 0010", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_0010()
        {
#line 4
this.WellFormatedEnrollmentNumbers("0010", "3", "3", "0010-1", "false", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 100", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_100()
        {
#line 4
this.WellFormatedEnrollmentNumbers("100", "4", "4", "100-4", "true", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 1000", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_1000()
        {
#line 4
this.WellFormatedEnrollmentNumbers("1000", "5", "5", "1000-A", "false", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 0954", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_0954()
        {
#line 4
this.WellFormatedEnrollmentNumbers("0954", "11", "B", "0954-b", "true", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 954", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_954()
        {
#line 4
this.WellFormatedEnrollmentNumbers("954", "11", "B", "954-B", "true", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 1334", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_1334()
        {
#line 4
this.WellFormatedEnrollmentNumbers("1334", "2", "2", "1334-2", "true", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 1392", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_1392()
        {
#line 4
this.WellFormatedEnrollmentNumbers("1392", "0", "0", "1392-E", "false", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 1486", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_1486()
        {
#line 4
this.WellFormatedEnrollmentNumbers("1486", "9", "9", "1486 - 4", "false", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 1548", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_1548()
        {
#line 4
this.WellFormatedEnrollmentNumbers("1548", "5", "5", "1548- 5", "true", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 1717", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_1717()
        {
#line 4
this.WellFormatedEnrollmentNumbers("1717", "2", "2", "1717-2", "true", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 2 881", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_2881()
        {
#line 4
this.WellFormatedEnrollmentNumbers("2 881", "4", "4", "2 881-B", "false", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 293 1", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_2931()
        {
#line 4
this.WellFormatedEnrollmentNumbers("293 1", "9", "9", "293 1-9", "true", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 89 7  2", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_8972()
        {
#line 4
this.WellFormatedEnrollmentNumbers("89 7  2", "5", "5", "89 7  2-2", "false", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Well formated enrollment numbers, 9105", SourceLine=11)]
        public virtual void WellFormatedEnrollmentNumbers_9105()
        {
#line 4
this.WellFormatedEnrollmentNumbers("9105", "11", "B", "9105-B", "true", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("The CheckDigitCalculator throws a FormatException", SourceLine=28)]
        public virtual void TheCheckDigitCalculatorThrowsAFormatException()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The CheckDigitCalculator throws a FormatException", null, ((string[])(null)));
#line 29
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 30
 testRunner.Given("the CheckDigitCalculator throws a FormatException", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
 testRunner.When("I call the Validate Method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.Then("the result should be false", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("The HexadecimalConverter throws an ArgumentOutOfRangeException", SourceLine=33)]
        public virtual void TheHexadecimalConverterThrowsAnArgumentOutOfRangeException()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The HexadecimalConverter throws an ArgumentOutOfRangeException", null, ((string[])(null)));
#line 34
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 35
 testRunner.Given("the HexadecimalConverter throws an ArgumentOutOfRangeException", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
 testRunner.When("I call the Validate Method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
 testRunner.Then("the result should be false", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
